#!/usr/bin/env bash

# resolve shell-specifics
case "$(echo "$SHELL" | sed -E 's|/usr(/local)?||g')" in
    "/bin/zsh")
        RCPATH="$HOME/.zshrc"
        SOURCE="${BASH_SOURCE[0]:-${(%):-%N}}"
    ;;
    *)
        RCPATH="$HOME/.bashrc"
        if [[ -f "$HOME/.bash_aliases" ]]; then
            RCPATH="$HOME/.bash_aliases"
        fi
        SOURCE="${BASH_SOURCE[0]}"
    ;;
esac

# get base dir regardless of execution location
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ "$SOURCE" != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SOURCE=$([[ "$SOURCE" = /* ]] && echo "$SOURCE" || echo "$PWD/${SOURCE#./}")
basedir=$(dirname "$SOURCE")
case "$1" in
  "rb" | "rbp" | "rebuild")
  (
    set -e
    cd "$basedir"
    scripts/rebuildPatches.sh || exit 1
  )
  ;;
  "p" | "patch")
  (
    set -e
    cd "$basedir"
    scripts/init.sh || exit 1
  )
  ;;
  "prb" | "patchAndRebuild")
  (
    set -e
    cd "$basedir"
    scripts/applyPatches.sh || exit 1
    scripts/rebuildPatches.sh || exit 1
  )
  ;;
  "i" | "installer")
  (
    set -e
    cd "$basedir"
    scripts/build.sh || exit 1
    scripts/createPatchFile.sh || exit 1
    scripts/createInstaller.sh || exit 1
  )
  ;;
  "b" | "build")
  (
    set -e
    cd "$basedir"
    scripts/init.sh || exit 1
    scripts/build.sh || exit 1
    scripts/createPatchFile.sh || exit 1
    scripts/createInstaller.sh || exit 1
  )
  ;;
  *)
    echo "Blueberry build tool command. This provides a easy way to build, and manage Blueberry Project."
    echo ""
    echo " Commands:"
    echo "  * rb, rebuild            | Rebuild patches, can be called from anywhere."
    echo "  * p, patch               | Apply all patches to the project without building it."
    echo "  * prb, patchAndRebuild   | Apply all patches to the project and rebuild patches. Useful when you modified the small part of a patch file."
    echo "  * i, installer           | Creates installer. The project must be patched before doing this."
    echo "  * b, build               | Builds the project and creates installer."
  ;;
esac
