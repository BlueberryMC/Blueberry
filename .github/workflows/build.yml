name: CI
on:
  push:
    branches:
      - '**'
  workflow_dispatch:
jobs:
  # the problem is that the numbers are going to be masked because of the secrets
  get_major_version:
    runs-on: ubuntu-latest
    name: "Get major version"
    steps:
      - uses: actions/checkout@v2
      - name: Get major version
        id: getMajorVersion
        run: |
          MINECRAFT_VERSION=$(grep MINECRAFT_VERSION buildSrc/src/main/kotlin/net/blueberrymc/gradle/buildSrc/constants/MagicConstants.kt | sed -r "s/.*= \"([0-9]+\\.[0-9]+)(\\.[0-9]+)?\"/\1/" | sed s/\\./_/)
          echo "Detected major version: $MINECRAFT_VERSION"
          echo "::set-output name=value::$MINECRAFT_VERSION"
    outputs:
      major_version: ${{ steps.getMajorVersion.outputs.value }}
  update_build_number:
    runs-on: ubuntu-latest
    name: "Update build number"
    needs:
      - get_major_version
    env:
      MAJOR_VERSION: ${{ needs.get_major_version.outputs.major_version }}
    steps:
      - name: Generate next build number
        run: 'echo "::set-output name=value::$(($BN + 1))"'
        id: generateNextBuildNumber
        env:
          BN: ${{ secrets[format('BUILD_NUMBER_{0}', env.MAJOR_VERSION)] }}
      - uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: ${{ format('BUILD_NUMBER_{0}', env.MAJOR_VERSION) }}
          value: ${{ steps.generateNextBuildNumber.outputs.value }}
          token: ${{ secrets.TOKEN }}
      - run: "echo 'Current build number (this number will be masked!): '$CBN', next build number: '$NBN"
        env:
          CBN: ${{ secrets[format('BUILD_NUMBER_{0}', env.MAJOR_VERSION)] }}
          NBN: ${{ steps.generateNextBuildNumber.outputs.value }}
    outputs:
      major_version: ${{ env.MAJOR_VERSION }}
  gradle-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
    name: "Gradle (Java ${{ matrix.Java }})"
    needs:
      - get_major_version
      - update_build_number
    env:
      MAJOR_VERSION: ${{ needs.update_build_number.outputs.major_version }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup git
        run: 'git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"'
      - name: Setup Java JDK
        uses: actions/setup-java@v2.3.1
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
          #cache: 'gradle'
      #      - name: Update submodules
      #        run: "git submodule update --init && cd MagmaCube && git submodule update --init && cd .."
      - name: "Apply patches (MagmaCube)"
        run: './gradlew patchMinecraft --info --stacktrace'
      - name: "Apply patches (Blueberry)"
        run: './gradlew applyBlueberryPatches --info --stacktrace'
      - name: Install MagmaCube
        run: 'cd MagmaCube && mvn -B clean install'
      - name: Run test
        run: './gradlew -PBUILD_NUMBER=$BUILD_NUMBER test --info --stacktrace'
        env:
          BUILD_NUMBER: ${{ secrets[format('BUILD_NUMBER_{0}', env.MAJOR_VERSION)] }}
      - name: Bake installer
        run: './gradlew -PBUILD_NUMBER=$BUILD_NUMBER bakeInstaller --info --stacktrace'
        env:
          BUILD_NUMBER: ${{ secrets[format('BUILD_NUMBER_{0}', env.MAJOR_VERSION)] }}
      - name: Retrieve version
        run: 'echo "::set-output name=version::$(./gradlew -q --console plain -PBUILD_NUMBER=$BUILD_NUMBER printVersion)"'
        id: retrieveVersion
        env:
          BUILD_NUMBER: ${{ secrets[format('BUILD_NUMBER_{0}', env.MAJOR_VERSION)] }}
      - name: Release new build
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.retrieveVersion.outputs.version }}
          files: '*-installer.jar'
          target_commitish: ${{ github.sha }}
          fail_on_unmatched_files: true
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ !startsWith(github.ref_name, 'ver/') && github.ref_name != 'main' && github.ref_name != 'master' }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: blueberry-installer-java-${{ matrix.java }}
          path: '*-installer.jar'
      - name: Prepare for deploy build
        id: prepDeploy
        run: |
          echo "::set-output name=version::${V%.*}"
        env:
          V: ${{ steps.retrieveVersion.outputs.version }}
      - name: Deploy build
        uses: wei/curl@v1.1.1
        with:
          args: "-X PUT -H \"Authorization: Bearer ${{ secrets.DEPLOY_SECRET_KEY }}\" https://api.blueberrymc.net/v1/projects/blueberry/version_groups/well_anything_can_be_put_here/builds/${{ secrets[format('BUILD_NUMBER_{0}', env.MAJOR_VERSION)] }}?repo=${{ github.repository }}&commit=${{ github.sha }}&versionGroup=${{ env.MAJOR_VERSION }}&version=${{ steps.prepDeploy.outputs.version }}&branch=${{ github.ref_name }}"
