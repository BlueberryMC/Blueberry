From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Fri, 5 Mar 2021 21:38:13 +0900
Subject: [PATCH] Fire simple events


diff --git a/src/main/java/net/minecraft/client/multiplayer/ClientPacketListener.java b/src/main/java/net/minecraft/client/multiplayer/ClientPacketListener.java
index 2cc69a71245f10bb3ea9565c92ea3b95a3fc1d15..0b0ddc54154ada7605a1210ea77a6dee1eb1e6c3 100644
--- a/src/main/java/net/minecraft/client/multiplayer/ClientPacketListener.java
+++ b/src/main/java/net/minecraft/client/multiplayer/ClientPacketListener.java
@@ -2379,6 +2379,13 @@ public class ClientPacketListener implements TickablePacketListener, ClientGameP
     }
 
     public void sendChat(String s) {
+        // Blueberry start - fire ClientLocalPlayerChatEvent
+        var event = new net.blueberrymc.client.event.player.ClientLocalPlayerChatEvent(s);
+        if (!event.callEvent()) {
+            return;
+        }
+        s = event.getMessage();
+        // Blueberry end - fire ClientLocalPlayerChatEvent
         Instant instant = Instant.now();
         long l = Crypt.SaltSupplier.getLong();
         LastSeenMessagesTracker.Update update = this.lastSeenMessages.generateAndApplyUpdate();
diff --git a/src/main/java/net/minecraft/network/Connection.java b/src/main/java/net/minecraft/network/Connection.java
index f8b439867e23432603bdd78a907e25c40d7be0d2..874bc4cb9a3b2b743bc19ae7bd2195b1011b867c 100644
--- a/src/main/java/net/minecraft/network/Connection.java
+++ b/src/main/java/net/minecraft/network/Connection.java
@@ -92,8 +92,10 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
 
         if (this.delayedDisconnect != null) {
             this.disconnect(this.delayedDisconnect);
+            return; // Blueberry
         }
 
+        new net.blueberrymc.common.event.network.ConnectionInitEvent(this.channel, this.receiving).callEvent(); // Blueberry
     }
 
     public void setProtocol(ConnectionProtocol connectionProtocol) {
@@ -398,6 +400,7 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
             }
         }
 
+        new net.blueberrymc.common.event.network.ConnectionSetupCompressionEvent(this.channel, this.receiving, i).callEvent(); // Blueberry
     }
 
     public void handleDisconnection() {
@@ -434,4 +437,4 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
             this.listener = packetSendListener;
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 61ed5dd71e8d6f8204956253c7862f0a8439cfb8..8a09868b1298ced4adb7fd8df87140b83054525b 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -210,6 +210,7 @@ public abstract class PlayerList {
         this.broadcastAll(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(List.of(serverPlayer)));
         this.sendLevelInfo(serverPlayer, serverLevel2);
         serverLevel2.addNewPlayer(serverPlayer);
+        new net.blueberrymc.common.event.player.PlayerJoinEvent(serverPlayer).callEvent(); // Blueberry
         this.server.getCustomBossEvents().onPlayerConnect(serverPlayer);
         this.server.getServerResourcePack().ifPresent((serverResourcePackInfo) -> serverPlayer.sendTexturePack(serverResourcePackInfo.url(), serverResourcePackInfo.hash(), serverResourcePackInfo.isRequired(), serverResourcePackInfo.prompt()));
 
diff --git a/src/main/java/net/minecraft/world/level/biome/Biome.java b/src/main/java/net/minecraft/world/level/biome/Biome.java
index 3111cec4b7f9b2ce5634cd83c2f04b29b25368a4..da84704b11ff81ae99a51cc325abb878c97c8a05 100644
--- a/src/main/java/net/minecraft/world/level/biome/Biome.java
+++ b/src/main/java/net/minecraft/world/level/biome/Biome.java
@@ -283,7 +283,8 @@ public final class Biome {
 
         public Biome build() {
             if (this.temperature != null && this.downfall != null && this.specialEffects != null && this.mobSpawnSettings != null && this.generationSettings != null) {
-                return new Biome(new Biome.ClimateSettings(this.hasPrecipitation, this.temperature, this.temperatureModifier, this.downfall), this.specialEffects, this.generationSettings, this.mobSpawnSettings);
+                // Blueberry - call BiomeInitEvent
+                return net.blueberrymc.common.bml.event.Event.callEvent(new net.blueberrymc.common.event.biome.BiomeInitEvent(this, () -> new Biome(new Biome.ClimateSettings(this.hasPrecipitation, this.temperature, this.temperatureModifier, this.downfall), this.specialEffects, this.generationSettings, this.mobSpawnSettings))).getBiome().get();
             } else {
                 throw new IllegalStateException("You are missing parameters to build a proper biome\n" + this);
             }
diff --git a/src/main/java/net/minecraft/world/level/biome/BiomeGenerationSettings.java b/src/main/java/net/minecraft/world/level/biome/BiomeGenerationSettings.java
index 2cb28b2037ab3e8eb6bf0980fecf1f7930576b31..952e654cd25a6dd1a8aaca140304cc991f4839b4 100644
--- a/src/main/java/net/minecraft/world/level/biome/BiomeGenerationSettings.java
+++ b/src/main/java/net/minecraft/world/level/biome/BiomeGenerationSettings.java
@@ -108,7 +108,8 @@ public class BiomeGenerationSettings {
         }
 
         public BiomeGenerationSettings build() {
-            return new BiomeGenerationSettings(this.carvers.entrySet().stream().collect(ImmutableMap.toImmutableMap(Entry::getKey, (entry) -> HolderSet.direct(entry.getValue()))), this.features.stream().map(HolderSet::direct).collect(ImmutableList.toImmutableList()));
+            // Blueberry - call BiomeGenerationSettingsInitEvent
+            return net.blueberrymc.common.bml.event.Event.callEvent(new net.blueberrymc.common.event.biome.BiomeGenerationSettingsInitEvent(this, () -> new BiomeGenerationSettings(this.carvers.entrySet().stream().collect(ImmutableMap.toImmutableMap(Entry::getKey, (entry) -> HolderSet.direct(entry.getValue()))), this.features.stream().map(HolderSet::direct).collect(ImmutableList.toImmutableList())))).getBiomeGenerationSettings().get();
         }
     }
 }
\ No newline at end of file
