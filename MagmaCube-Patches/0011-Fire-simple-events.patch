From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Fri, 5 Mar 2021 21:38:13 +0900
Subject: [PATCH] Fire simple events


diff --git a/src/main/java/net/minecraft/client/player/LocalPlayer.java b/src/main/java/net/minecraft/client/player/LocalPlayer.java
index bc9e8723eccc02a77720bf8deb062c9af4298f91..3cf04f921ab424c5e84bbcf4f4da04cca8769ef0 100644
--- a/src/main/java/net/minecraft/client/player/LocalPlayer.java
+++ b/src/main/java/net/minecraft/client/player/LocalPlayer.java
@@ -310,6 +310,13 @@ public class LocalPlayer extends AbstractClientPlayer {
 
     private void sendChat(String s, @Nullable Component component) {
         ChatMessageContent chatMessageContent = this.buildSignedContent(s, component);
+        // Blueberry start - fire ClientLocalPlayerChatEvent
+        var event = new net.blueberrymc.client.event.player.ClientLocalPlayerChatEvent(s2);
+        if (!event.callEvent()) {
+            return;
+        }
+        s2 = event.getMessage();
+        // Blueberry end - fire ClientLocalPlayerChatEvent
         MessageSigner messageSigner = this.createMessageSigner();
         LastSeenMessages.Update update = this.connection.generateMessageAcknowledgements();
         MessageSignature messageSignature = this.signMessage(messageSigner, chatMessageContent, update.lastSeen());
diff --git a/src/main/java/net/minecraft/network/Connection.java b/src/main/java/net/minecraft/network/Connection.java
index cc8e1e3c7c9b472c24ed895efdbf7da81f5d7911..16a955cf6534eb2955cf4047dc69b9ab9ab0e587 100644
--- a/src/main/java/net/minecraft/network/Connection.java
+++ b/src/main/java/net/minecraft/network/Connection.java
@@ -86,6 +86,7 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
             LOGGER.error(LogUtils.FATAL_MARKER, "Failed to change protocol to handshake", var3);
         }
 
+        new net.blueberrymc.common.event.network.ConnectionInitEvent(this.channel, this.receiving).callEvent(); // Blueberry
     }
 
     public void setProtocol(ConnectionProtocol connectionProtocol) {
@@ -365,6 +366,7 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
             }
         }
 
+        new net.blueberrymc.common.event.network.ConnectionSetupCompressionEvent(this.channel, this.receiving, i).callEvent(); // Blueberry
     }
 
     public void handleDisconnection() {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index d06b8673efce982e10d700ee5dfc4905e51f5143..d2842371406e25ad71e81767cbcb45393af5b3a1 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -193,6 +193,7 @@ public abstract class PlayerList {
         }
 
         serverLevel2.addNewPlayer(serverPlayer);
+        new net.blueberrymc.common.event.player.PlayerJoinEvent(serverPlayer).callEvent(); // Blueberry
         this.server.getCustomBossEvents().onPlayerConnect(serverPlayer);
         this.sendLevelInfo(serverPlayer, serverLevel2);
         this.server.getServerResourcePack().ifPresent((serverResourcePackInfo) -> serverPlayer.sendTexturePack(serverResourcePackInfo.url(), serverResourcePackInfo.hash(), serverResourcePackInfo.isRequired(), serverResourcePackInfo.prompt()));
diff --git a/src/main/java/net/minecraft/world/level/biome/Biome.java b/src/main/java/net/minecraft/world/level/biome/Biome.java
index 3bcf0ff3a29ffe1a14132d2feb6a5c37c0c7de87..741893a34983f8b4d7fe336606458e991b870469 100644
--- a/src/main/java/net/minecraft/world/level/biome/Biome.java
+++ b/src/main/java/net/minecraft/world/level/biome/Biome.java
@@ -288,7 +288,8 @@ public final class Biome {
 
         public Biome build() {
             if (this.precipitation != null && this.temperature != null && this.downfall != null && this.specialEffects != null && this.mobSpawnSettings != null && this.generationSettings != null) {
-                return new Biome(new Biome.ClimateSettings(this.precipitation, this.temperature, this.temperatureModifier, this.downfall), this.specialEffects, this.generationSettings, this.mobSpawnSettings);
+                // Blueberry - call BiomeInitEvent
+                return net.blueberrymc.common.bml.event.Event.callEvent(new net.blueberrymc.common.event.biome.BiomeInitEvent(this, () -> new Biome(new Biome.ClimateSettings(this.precipitation, this.temperature, this.temperatureModifier, this.downfall), this.specialEffects, this.generationSettings, this.mobSpawnSettings))).getBiome().get();
             } else {
                 throw new IllegalStateException("You are missing parameters to build a proper biome\n" + this);
             }
diff --git a/src/main/java/net/minecraft/world/level/biome/BiomeGenerationSettings.java b/src/main/java/net/minecraft/world/level/biome/BiomeGenerationSettings.java
index ddf30459c3b7e03fd2d872d46fe3eaa5aa9d78de..9b8fab6e326e35769bd05c8fc8efd5923145ed3e 100644
--- a/src/main/java/net/minecraft/world/level/biome/BiomeGenerationSettings.java
+++ b/src/main/java/net/minecraft/world/level/biome/BiomeGenerationSettings.java
@@ -86,7 +86,8 @@ public class BiomeGenerationSettings {
         }
 
         public BiomeGenerationSettings build() {
-            return new BiomeGenerationSettings(this.carvers.entrySet().stream().collect(ImmutableMap.toImmutableMap(Entry::getKey, (entry) -> HolderSet.direct(entry.getValue()))), this.features.stream().map(HolderSet::direct).collect(ImmutableList.toImmutableList()));
+            // Blueberry - call BiomeGenerationSettingsInitEvent
+            return net.blueberrymc.common.bml.event.Event.callEvent(new net.blueberrymc.common.event.biome.BiomeGenerationSettingsInitEvent(this, () -> new BiomeGenerationSettings(this.carvers.entrySet().stream().collect(ImmutableMap.toImmutableMap(Entry::getKey, (entry) -> HolderSet.direct(entry.getValue()))), this.features.stream().map(HolderSet::direct).collect(ImmutableList.toImmutableList())))).getBiomeGenerationSettings().get();
         }
     }
 }
\ No newline at end of file
