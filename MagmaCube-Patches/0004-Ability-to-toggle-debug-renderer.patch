From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <ilyy@outlook.jp>
Date: Fri, 15 Jan 2021 00:32:29 +0900
Subject: [PATCH] Ability to toggle debug renderer


diff --git a/src/main/java/net/minecraft/client/renderer/debug/DebugRenderer.java b/src/main/java/net/minecraft/client/renderer/debug/DebugRenderer.java
index 8fc43ce6900994ddcba1da67e9e64afb10f53890..2a5c3bb55eda24c960e3071d8cbde97dbf417f49 100644
--- a/src/main/java/net/minecraft/client/renderer/debug/DebugRenderer.java
+++ b/src/main/java/net/minecraft/client/renderer/debug/DebugRenderer.java
@@ -22,6 +22,7 @@ import net.minecraft.world.entity.projectile.ProjectileUtil;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.Vec3;
+import static net.blueberrymc.common.InternalBlueberryMod.*; // Blueberry
 
 public class DebugRenderer {
    public final PathfindingRenderer pathfindingRenderer = new PathfindingRenderer();
@@ -95,29 +96,26 @@ public class DebugRenderer {
 
    public void render(PoseStack poseStack, MultiBufferSource.BufferSource bufferSource, double d, double d2, double d3) {
       if (this.renderChunkborder && !Minecraft.getInstance().showOnlyReducedInfo()) {
-         this.chunkBorderRenderer.render(poseStack, bufferSource, d, d2, d3);
-         // MagmaCube start - show debug renderer with F3+G
-         if (net.minecraft.SharedConstants.IS_RUNNING_IN_IDE) {
-            this.pathfindingRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.waterDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.chunkBorderRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.heightMapRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.collisionBoxRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.neighborsUpdateRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.caveRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.structureRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.lightDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.worldGenAttemptRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.solidFaceRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.chunkRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.brainDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.villageSectionsDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.beeDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.raidDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.goalSelectorRenderer.render(poseStack, bufferSource, d, d2, d3);
-            this.gameTestDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
-         }
-         // MagmaCube end - show debug renderer with F3+G
+         // Blueberry start
+            if (showDRPathfinding) this.pathfindingRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRWaterDebug) this.waterDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRChunkBorder) this.chunkBorderRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRHeightMap) this.heightMapRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRCollisionBox) this.collisionBoxRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRNeighborsUpdate) this.neighborsUpdateRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRCave) this.caveRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRStructure) this.structureRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRLightDebug) this.lightDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRWorldGenAttempt) this.worldGenAttemptRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRSolidFace) this.solidFaceRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRChunk) this.chunkRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRBrainDebug) this.brainDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRVillageSectionsDebug) this.villageSectionsDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRBeeDebug) this.beeDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRRaidDebug) this.raidDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRGoalSelector) this.goalSelectorRenderer.render(poseStack, bufferSource, d, d2, d3);
+            if (showDRGameTestDebug) this.gameTestDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
+         // Blueberry end
       }
 
       this.gameTestDebugRenderer.render(poseStack, bufferSource, d, d2, d3);
