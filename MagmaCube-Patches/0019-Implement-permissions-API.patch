From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Tue, 5 Apr 2022 15:14:42 +0900
Subject: [PATCH] Implement permissions API


diff --git a/src/main/java/net/minecraft/commands/CommandSource.java b/src/main/java/net/minecraft/commands/CommandSource.java
index da359dc9037eae090646ebb56831b0d54fec2d87..9b09393e545cae57248e6eb7a0c7041c040788f9 100644
--- a/src/main/java/net/minecraft/commands/CommandSource.java
+++ b/src/main/java/net/minecraft/commands/CommandSource.java
@@ -2,7 +2,7 @@ package net.minecraft.commands;
 
 import net.minecraft.network.chat.Component;
 
-public interface CommandSource {
+public interface CommandSource extends net.blueberrymc.common.permission.PermissionHolder { // Blueberry
     CommandSource NULL = new CommandSource() {
         public void sendSystemMessage(Component component) {
         }
diff --git a/src/main/java/net/minecraft/commands/CommandSourceStack.java b/src/main/java/net/minecraft/commands/CommandSourceStack.java
index 7f3b8ab63a5131570ff0e4bfc65fcb1dee6df0b1..f3ef7e3270fb678e811b5b7be894ec067099953c 100644
--- a/src/main/java/net/minecraft/commands/CommandSourceStack.java
+++ b/src/main/java/net/minecraft/commands/CommandSourceStack.java
@@ -36,7 +36,7 @@ import net.minecraft.world.level.dimension.DimensionType;
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
 
-public class CommandSourceStack implements SharedSuggestionProvider {
+public class CommandSourceStack implements SharedSuggestionProvider, net.blueberrymc.common.permission.PermissionHolder { // Blueberry
     public static final SimpleCommandExceptionType ERROR_NOT_PLAYER = new SimpleCommandExceptionType(Component.translatable("permissions.requires.player"));
     public static final SimpleCommandExceptionType ERROR_NOT_ENTITY = new SimpleCommandExceptionType(Component.translatable("permissions.requires.entity"));
     private final CommandSource source;
@@ -344,4 +344,16 @@ public class CommandSourceStack implements SharedSuggestionProvider {
     public RegistryAccess registryAccess() {
         return this.server.registryAccess();
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return source.hasPermission(permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return source.getPermissionState(permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 9e310721023ce795febaf36888db202ccbc04b6d..2752f64d5c7587d5b3aebc4de696497a7a3ec8b2 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1806,4 +1806,16 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             };
         }
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForConsole(permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForConsole(permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/rcon/RconConsoleSource.java b/src/main/java/net/minecraft/server/rcon/RconConsoleSource.java
index 836b4209ce8be8c0234feed4fa8a9a96086b94cd..105e0ed8d8dc66bb9d0ecd50660da61c137f8769 100644
--- a/src/main/java/net/minecraft/server/rcon/RconConsoleSource.java
+++ b/src/main/java/net/minecraft/server/rcon/RconConsoleSource.java
@@ -47,4 +47,16 @@ public class RconConsoleSource implements CommandSource {
     public boolean shouldInformAdmins() {
         return this.server.shouldRconBroadcast();
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForRcon(permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForRcon(permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 6511f5f132ff95b7690097ea05b90ae51052ef65..9a65de8e12e0bd954b229bef25e2de9b9be31f36 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -3128,4 +3128,16 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             return this.save;
         }
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForEntity(this, permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForEntity(this, permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index dd5090709b316aa9d4f7578852d0f6104eea0970..25830a73a38b6887c22068e52ec9681691efbcea 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -2019,4 +2019,16 @@ public abstract class Player extends LivingEntity {
             return this.message;
         }
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForPlayer(getUUID(), permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForPlayer(getUUID(), permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/level/BaseCommandBlock.java b/src/main/java/net/minecraft/world/level/BaseCommandBlock.java
index 010b13fcef9fa6f1c6b9fcd33651e69424bb39f8..77b96d2c0dee85db4577d03b8bf936c86d2064aa 100644
--- a/src/main/java/net/minecraft/world/level/BaseCommandBlock.java
+++ b/src/main/java/net/minecraft/world/level/BaseCommandBlock.java
@@ -207,4 +207,16 @@ public abstract class BaseCommandBlock implements CommandSource {
     public boolean shouldInformAdmins() {
         return this.getLevel().getGameRules().getBoolean(GameRules.RULE_COMMANDBLOCKOUTPUT);
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForCommandBlock(this, permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForCommandBlock(this, permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
