From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Mon, 5 Apr 2021 17:17:17 +0900
Subject: [PATCH] Add ResourceManager#remove(PackResources)


diff --git a/src/main/java/net/minecraft/server/packs/resources/FallbackResourceManager.java b/src/main/java/net/minecraft/server/packs/resources/FallbackResourceManager.java
index 92476950f3fc8f19b73bbb7d1605161c9c7de971..30349cfad1158b7243c26a9f7234b77a57fc74c1 100644
--- a/src/main/java/net/minecraft/server/packs/resources/FallbackResourceManager.java
+++ b/src/main/java/net/minecraft/server/packs/resources/FallbackResourceManager.java
@@ -34,6 +34,7 @@ public class FallbackResourceManager implements ResourceManager {
     public void add(PackResources packResources) {
         this.fallbacks.add(packResources);
     }
+    @Override public boolean remove(PackResources packResources) { return this.fallbacks.remove(packResources); } // Blueberry
 
     public Set<String> getNamespaces() {
         return ImmutableSet.of(this.namespace);
diff --git a/src/main/java/net/minecraft/server/packs/resources/MultiPackResourceManager.java b/src/main/java/net/minecraft/server/packs/resources/MultiPackResourceManager.java
index 2d605fd6e979f1cd7baaa3575108a4df32eb776f..5bf1b951b92ef52ceb0e1cbb73dbd3cd7880c483 100644
--- a/src/main/java/net/minecraft/server/packs/resources/MultiPackResourceManager.java
+++ b/src/main/java/net/minecraft/server/packs/resources/MultiPackResourceManager.java
@@ -21,7 +21,7 @@ public class MultiPackResourceManager implements CloseableResourceManager {
     private final List<PackResources> packs;
 
     public MultiPackResourceManager(PackType packType, List<PackResources> list) {
-        this.packs = List.copyOf(list);
+        this.packs = new java.util.ArrayList<>(list); // Blueberry
         Map<String, FallbackResourceManager> map = new HashMap();
 
         for(PackResources packResources : list) {
@@ -79,4 +79,6 @@ public class MultiPackResourceManager implements CloseableResourceManager {
     public void close() {
         this.packs.forEach(PackResources::close);
     }
+
+    @Override public boolean remove(PackResources packResources) { return this.packs.remove(packResources); } // Blueberry
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/packs/resources/ReloadableResourceManager.java b/src/main/java/net/minecraft/server/packs/resources/ReloadableResourceManager.java
index f8616e612b8a1fa41d761844ec3d0281d3f4e03f..ebb3563151164881273c7f41cc6158e40748916b 100644
--- a/src/main/java/net/minecraft/server/packs/resources/ReloadableResourceManager.java
+++ b/src/main/java/net/minecraft/server/packs/resources/ReloadableResourceManager.java
@@ -15,6 +15,7 @@ import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.PackResources;
 import net.minecraft.server.packs.PackType;
 import net.minecraft.util.Unit;
+import org.jetbrains.annotations.NotNull;
 import org.slf4j.Logger;
 
 public class ReloadableResourceManager implements ResourceManager, AutoCloseable {
@@ -66,4 +67,6 @@ public class ReloadableResourceManager implements ResourceManager, AutoCloseable
     public Stream<PackResources> listPacks() {
         return this.resources.listPacks();
     }
+
+    @Override public boolean remove(@NotNull PackResources packResources) {return this.resources.remove(packResources); } // Blueberry
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/packs/resources/ResourceManager.java b/src/main/java/net/minecraft/server/packs/resources/ResourceManager.java
index 80f21163ad6f7ba69ba74ac3899b9a125776dd68..26fd9a73bcfb8baa908542029ccdd9e01df1d90d 100644
--- a/src/main/java/net/minecraft/server/packs/resources/ResourceManager.java
+++ b/src/main/java/net/minecraft/server/packs/resources/ResourceManager.java
@@ -12,7 +12,7 @@ import java.util.stream.Stream;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.PackResources;
 
-public interface ResourceManager extends ResourceProvider {
+public interface ResourceManager extends ResourceProvider, net.blueberrymc.server.packs.resources.BlueberryResourceProvider { // Blueberry
     Set<String> getNamespaces();
 
     boolean hasResource(ResourceLocation var1);
