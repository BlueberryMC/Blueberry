From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Tue, 5 Apr 2022 15:14:42 +0900
Subject: [PATCH] Implement permissions API


diff --git a/src/main/java/net/minecraft/commands/CommandSource.java b/src/main/java/net/minecraft/commands/CommandSource.java
index da359dc9037eae090646ebb56831b0d54fec2d87..9b09393e545cae57248e6eb7a0c7041c040788f9 100644
--- a/src/main/java/net/minecraft/commands/CommandSource.java
+++ b/src/main/java/net/minecraft/commands/CommandSource.java
@@ -2,7 +2,7 @@ package net.minecraft.commands;
 
 import net.minecraft.network.chat.Component;
 
-public interface CommandSource {
+public interface CommandSource extends net.blueberrymc.common.permission.PermissionHolder { // Blueberry
     CommandSource NULL = new CommandSource() {
         public void sendSystemMessage(Component component) {
         }
diff --git a/src/main/java/net/minecraft/commands/CommandSourceStack.java b/src/main/java/net/minecraft/commands/CommandSourceStack.java
index e91af739fc733401c0380ec65e06fe5b9f3308ea..7a7e3fd21c7a0a940255dfbfe4ecd03e77725232 100644
--- a/src/main/java/net/minecraft/commands/CommandSourceStack.java
+++ b/src/main/java/net/minecraft/commands/CommandSourceStack.java
@@ -33,7 +33,7 @@ import net.minecraft.world.level.dimension.DimensionType;
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
 
-public class CommandSourceStack implements SharedSuggestionProvider {
+public class CommandSourceStack implements SharedSuggestionProvider, net.blueberrymc.common.permission.PermissionHolder { // Blueberry
     public static final SimpleCommandExceptionType ERROR_NOT_PLAYER = new SimpleCommandExceptionType(Component.translatable("permissions.requires.player"));
     public static final SimpleCommandExceptionType ERROR_NOT_ENTITY = new SimpleCommandExceptionType(Component.translatable("permissions.requires.entity"));
     private final CommandSource source;
@@ -298,4 +298,16 @@ public class CommandSourceStack implements SharedSuggestionProvider {
     public RegistryAccess registryAccess() {
         return this.server.registryAccess();
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return source.hasPermission(permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return source.getPermissionState(permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index cc7ad5ed6cd5b0aa5e795b1ccc6f52e9bad602c4..86e8d254db8ac7d8723b46d2323d82a1513adfe9 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1803,4 +1803,16 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             };
         }
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForConsole(permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForConsole(permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/rcon/RconConsoleSource.java b/src/main/java/net/minecraft/server/rcon/RconConsoleSource.java
index 836b4209ce8be8c0234feed4fa8a9a96086b94cd..105e0ed8d8dc66bb9d0ecd50660da61c137f8769 100644
--- a/src/main/java/net/minecraft/server/rcon/RconConsoleSource.java
+++ b/src/main/java/net/minecraft/server/rcon/RconConsoleSource.java
@@ -47,4 +47,16 @@ public class RconConsoleSource implements CommandSource {
     public boolean shouldInformAdmins() {
         return this.server.shouldRconBroadcast();
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForRcon(permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForRcon(permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index a850f97263ff0543e207b2dd815e3efdf1f4fd3c..b77e70b04229b4d7fd29222998bb3cdab9728dfc 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -3132,4 +3132,16 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             return this.save;
         }
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForEntity(this, permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForEntity(this, permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 23a8ff5955a6b3d3aa2fcffe9dc55ac5696cea90..b2179950f10be67bcab2f9d0615ded3b530a9820 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -2010,4 +2010,16 @@ public abstract class Player extends LivingEntity {
             return this.message;
         }
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForPlayer(getUUID(), permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForPlayer(getUUID(), permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/world/level/BaseCommandBlock.java b/src/main/java/net/minecraft/world/level/BaseCommandBlock.java
index 010b13fcef9fa6f1c6b9fcd33651e69424bb39f8..77b96d2c0dee85db4577d03b8bf936c86d2064aa 100644
--- a/src/main/java/net/minecraft/world/level/BaseCommandBlock.java
+++ b/src/main/java/net/minecraft/world/level/BaseCommandBlock.java
@@ -207,4 +207,16 @@ public abstract class BaseCommandBlock implements CommandSource {
     public boolean shouldInformAdmins() {
         return this.getLevel().getGameRules().getBoolean(GameRules.RULE_COMMANDBLOCKOUTPUT);
     }
+
+    // Blueberry start
+    @Override
+    public boolean hasPermission(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().hasPermissionForCommandBlock(this, permission);
+    }
+
+    @Override
+    public net.blueberrymc.common.permission.PermissionState getPermissionState(String permission) {
+        return net.blueberrymc.common.Blueberry.getPermissionProvider().getPermissionStateForCommandBlock(this, permission);
+    }
+    // Blueberry end
 }
\ No newline at end of file
