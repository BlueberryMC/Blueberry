From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <ilyy@outlook.jp>
Date: Wed, 13 Jan 2021 03:54:01 +0900
Subject: [PATCH] POM Changes


diff --git a/pom.xml b/pom.xml
index b180780585b1a4f8ec6583a4a96e228ae3127939..a72506c4605b1c10960f9a4f9687f963034d0bd1 100644
--- a/pom.xml
+++ b/pom.xml
@@ -3,9 +3,11 @@
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <parent>
-        <artifactId>minecraft-parent</artifactId>
-        <groupId>xyz.acrylicstyle.minecraft</groupId>
-        <version>1.16.5</version>
+        <!-- Blueberry start -->
+        <artifactId>blueberry-parent</artifactId>
+        <groupId>net.blueberrymc</groupId>
+        <version>dev-SNAPSHOT</version>
+        <!-- Blueberry end -->
     </parent>
     <modelVersion>4.0.0</modelVersion>
     
@@ -14,10 +16,13 @@
         <lwjgl.version>3.2.2</lwjgl.version>
     </properties>
 
-    <artifactId>minecraft</artifactId>
+    <!-- Blueberry start -->
+    <artifactId>blueberry</artifactId>
+    <version>1.16.5</version>
+    <name>Blueberry-Client</name>
+    <!-- Blueberry end -->
 
     <build>
-        <finalName>Minecraft</finalName>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
@@ -59,6 +64,18 @@
     </repositories>
 
     <dependencies>
+        <!-- Blueberry start -->
+        <dependency>
+            <groupId>net.blueberrymc</groupId>
+            <artifactId>blueberry-api</artifactId>
+            <version>0.0.2</version>
+        </dependency>
+        <dependency>
+            <groupId>net.blueberrymc</groupId>
+            <artifactId>minecraftforge-api</artifactId>
+            <version>dev-SNAPSHOT</version>
+        </dependency>
+        <!-- Blueberry end -->
         <dependency>
             <groupId>com.google.code.findbugs</groupId>
             <artifactId>jsr305</artifactId>
diff --git a/src/main/java/net/minecraft/client/ClientBrandRetriever.java b/src/main/java/net/minecraft/client/ClientBrandRetriever.java
index 4d80e4054f8436bd8fd1af85a8121a70304a256f..5e2a6841cf2d3827c4b1370a60ab8d52c853c652 100644
--- a/src/main/java/net/minecraft/client/ClientBrandRetriever.java
+++ b/src/main/java/net/minecraft/client/ClientBrandRetriever.java
@@ -2,6 +2,6 @@ package net.minecraft.client;
 
 public class ClientBrandRetriever {
    public static String getClientModName() {
-      return "magmacube"; // MagmaCube > vanilla!
+      return "blueberry"; // Blueberry > // MagmaCube > vanilla!
    }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index cefe71ac531d5d5ab4fecdb25f8563cd3c8d47c2..1c43e24133df0987e4bad8796e98e1e3fc0e2c05 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -895,7 +895,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
    }
 
    public String getServerModName() {
-      return "vanilla";
+      return "blueberry"; // Blueberry > vanilla
    }
 
    public CrashReport fillReport(CrashReport crashReport) {
@@ -1240,7 +1240,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
    }
 
    public CompletableFuture<Void> reloadResources(Collection<String> collection) {
-      CompletableFuture<Void> completableFuture = CompletableFuture.supplyAsync(() -> (ImmutableList)collection.stream().map(this.packRepository::getPack).filter(Objects::nonNull).map(Pack::open).collect(ImmutableList.toImmutableList()), this).thenCompose((immutableList) -> ServerResources.loadResources(immutableList, this.isDedicatedServer() ? Commands.CommandSelection.DEDICATED : Commands.CommandSelection.INTEGRATED, this.getFunctionCompilationLevel(), this.executor, this)).thenAcceptAsync((serverResources) -> {
+      CompletableFuture<Void> completableFuture = CompletableFuture.supplyAsync(() -> collection.stream().map(this.packRepository::getPack).filter(Objects::nonNull).map(Pack::open).collect(ImmutableList.toImmutableList()), this).thenCompose((immutableList) -> ServerResources.loadResources(immutableList, this.isDedicatedServer() ? Commands.CommandSelection.DEDICATED : Commands.CommandSelection.INTEGRATED, this.getFunctionCompilationLevel(), this.executor, this)).thenAcceptAsync((serverResources) -> { // Blueberry - decompile error
          this.resources.close();
          this.resources = serverResources;
          this.packRepository.setSelected(collection);
