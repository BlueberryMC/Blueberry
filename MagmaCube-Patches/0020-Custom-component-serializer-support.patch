From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Mon, 25 Apr 2022 00:57:30 +0900
Subject: [PATCH] Custom component serializer support


diff --git a/src/main/java/net/minecraft/network/chat/Component.java b/src/main/java/net/minecraft/network/chat/Component.java
index 831249f684f6ffd0e503ee272279bcb3848bcc30..e4bc7c1468dd50190c4088714237d0d887fa10ea 100644
--- a/src/main/java/net/minecraft/network/chat/Component.java
+++ b/src/main/java/net/minecraft/network/chat/Component.java
@@ -262,7 +262,7 @@ public interface Component extends Message, FormattedText {
                     mutableComponent = Component.selector(GsonHelper.getAsString(jsonObject, "selector"), optional);
                 } else if (jsonObject.has("keybind")) {
                     mutableComponent = Component.keybind(GsonHelper.getAsString(jsonObject, "keybind"));
-                } else {
+                } else if (jsonObject.has("nbt")) { // Blueberry
                     if (!jsonObject.has("nbt")) {
                         throw new JsonParseException("Don't know how to turn " + jsonElement + " into a Component");
                     }
@@ -284,6 +284,17 @@ public interface Component extends Message, FormattedText {
                     }
 
                     mutableComponent = Component.nbt(s4, flag, optional2, dataSource);
+                    // Blueberry start - custom components
+                } else if (jsonObject.has("__blueberry_custom_component__")) {
+                    String customComponentType = GsonHelper.getAsString(jsonObject, "__blueberry_custom_component__");
+                    JsonElement element = jsonObject.get("__blueberry_custom_component_data__");
+                    if (element == null) {
+                        throw new JsonParseException("Custom component data is missing despite __blueberry_custom_component__ being set");
+                    }
+                    mutableComponent = MutableComponent.create(net.blueberrymc.network.CustomComponentSerializer.callDeserialize(customComponentType, element, jsonDeserializationContext));
+                    // Blueberry end - custom components
+                } else {
+                    throw new JsonParseException("Don't know how to turn " + jsonElement + " into a Component");
                 }
 
                 if (jsonObject.has("extra")) {
@@ -389,7 +400,7 @@ public interface Component extends Message, FormattedText {
             } else if (componentContents instanceof KeybindContents) {
                 KeybindContents keybindContents = (KeybindContents)componentContents;
                 jsonObject.addProperty("keybind", keybindContents.getName());
-            } else {
+            } else if (component instanceof NbtContents) { // Blueberry
                 if (!(componentContents instanceof NbtContents)) {
                     throw new IllegalArgumentException("Don't know how to serialize " + componentContents + " as a Component");
                 }
@@ -413,6 +424,12 @@ public interface Component extends Message, FormattedText {
                     StorageDataSource storageDataSource = (StorageDataSource)dataSource;
                     jsonObject.addProperty("storage", storageDataSource.id().toString());
                 }
+                // Blueberry start - custom components
+            } else {
+                jsonObject.addProperty("__blueberry_custom_component__", componentContents.getClass().getTypeName());
+                JsonElement element = net.blueberrymc.network.CustomComponentSerializer.callSerialize(componentContents, jsonSerializationContext);
+                jsonObject.add("__blueberry_custom_component_data__", element);
+                // Blueberry end - custom components
             }
 
             return jsonObject;
