From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Mon, 25 Apr 2022 00:57:30 +0900
Subject: [PATCH] Custom component serializer support


diff --git a/src/main/java/net/minecraft/network/chat/Component.java b/src/main/java/net/minecraft/network/chat/Component.java
index 0a2e9150e71a3f5b2f0b9928c2fd4d6ab3ed5593..2e6e577324fc74ada0d0d89751c821d65f1c2975 100644
--- a/src/main/java/net/minecraft/network/chat/Component.java
+++ b/src/main/java/net/minecraft/network/chat/Component.java
@@ -204,7 +204,7 @@ public interface Component extends Message, FormattedText {
                     mutableComponent = new SelectorComponent(GsonHelper.getAsString(jsonObject, "selector"), optional);
                 } else if (jsonObject.has("keybind")) {
                     mutableComponent = new KeybindComponent(GsonHelper.getAsString(jsonObject, "keybind"));
-                } else {
+                } else if (jsonObject.has("nbt")) { // Blueberry
                     if (!jsonObject.has("nbt")) {
                         throw new JsonParseException("Don't know how to turn " + jsonElement + " into a Component");
                     }
@@ -223,6 +223,17 @@ public interface Component extends Message, FormattedText {
 
                         mutableComponent = new NbtComponent.StorageNbtComponent(s2, flag, new ResourceLocation(GsonHelper.getAsString(jsonObject, "storage")), optional2);
                     }
+                    // Blueberry start - custom components
+                } else if (jsonObject.has("__blueberry_custom_component__")) {
+                    String customComponentType = GsonHelper.getAsString(jsonObject, "__blueberry_custom_component__");
+                    JsonElement element = jsonObject.get("__blueberry_custom_component_data__");
+                    if (element == null) {
+                        throw new JsonParseException("Custom component data is missing despite __blueberry_custom_component__ being set");
+                    }
+                    mutableComponent = net.blueberrymc.network.CustomComponentSerializer.callDeserialize(customComponentType, element, jsonDeserializationContext);
+                    // Blueberry end - custom components
+                } else {
+                    throw new JsonParseException("Don't know how to turn " + jsonElement + " into a Component");
                 }
 
                 if (jsonObject.has("extra")) {
@@ -304,7 +315,7 @@ public interface Component extends Message, FormattedText {
             } else if (component instanceof KeybindComponent) {
                 KeybindComponent keybindComponent = (KeybindComponent)component;
                 jsonObject.addProperty("keybind", keybindComponent.getName());
-            } else {
+            } else if (component instanceof NbtComponent) { // Blueberry
                 if (!(component instanceof NbtComponent)) {
                     throw new IllegalArgumentException("Don't know how to serialize " + component + " as a Component");
                 }
@@ -327,6 +338,12 @@ public interface Component extends Message, FormattedText {
                     NbtComponent.StorageNbtComponent storageNbtComponent = (NbtComponent.StorageNbtComponent)component;
                     jsonObject.addProperty("storage", storageNbtComponent.getId().toString());
                 }
+                // Blueberry start - custom components
+            } else {
+                jsonObject.addProperty("__blueberry_custom_component__", component.getClass().getTypeName());
+                JsonElement element = net.blueberrymc.network.CustomComponentSerializer.callSerialize(component, jsonSerializationContext);
+                jsonObject.add("__blueberry_custom_component_data__", element);
+                // Blueberry end - custom components
             }
 
             return jsonObject;
